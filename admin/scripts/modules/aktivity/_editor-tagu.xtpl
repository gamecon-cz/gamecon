<!-- begin:editorTagu -->
<div id="{editorTaguHtmlId}" class="modal editor-tagu" data-{editorTaguData}="{}">
  <div id="chybyEditoruTagu"></div>
  <form method="post" action="">
    <input name="{aEditTag}[{aEditIdTagu}]" type="hidden" id="idTaguEditorTagu" value="{idTagu}">
    <table>
      <tr>
        <td><label for="nazevTaguEditorTagu">Název tagu*</label></td>
        <td><input id="nazevTaguEditorTagu" type="text" name="{aEditTag}[{aEditNazevTagu}]" value="{nazevTagu}"
                   required>
        </td>
      </tr>
      <tr>
        <td><label for="idKategorieTaguEditorTagu">Kategorie tagu*</label></td>
        <td>
          <select id="idKategorieTaguEditorTagu" name="{aEditTag}[{aEditKategorieTagu}]" required>
            <option value=""></option>
            <!-- begin:kategorie -->
            <option {kategorie_selected} value="{id_kategorie}">{nazev_kategorie}</option>
            <!-- end:kategorie -->
          </select>
        </td>
      <tr>
        <td><label for="poznamkaEditorTagu">Poznámka</label></td>
        <td><textarea id="poznamkaEditorTagu" name="{aEditTag}[{aEditPoznamkaTagu}]">{poznamkaTagu}</textarea>
        </td>
      </tr>
    </table>
    <div>
      <button type="submit">Uložit</button>
    </div>
  </form>
</div>
<script type="text/javascript">
  const allTagNames = {allTagNamesJson};
  const chybyEditoruTagu = $('#chybyEditoruTagu');
  const nazevTaguEditorTagu = $('#nazevTaguEditorTagu');
  const detectDuplicity = function () {
    chybyEditoruTagu.html('');
    if (document.getElementById('idTaguEditorTagu').value) {
      return false; // tag has an ID, so duplicity of a new record is irrelevant as the record is just edited
    }
    const tagValue = nazevTaguEditorTagu.val();
    if (allTagNames.includes(tagValue.toLowerCase())) {
      chybyEditoruTagu.append($('<div id="tagAlreadyExists" class="warning">Tag "' + tagValue + '" už existuje</div>'));
    }
  };
  const fillFromData = function (element) {
    const tag = $(element).data('{editorTaguData}');
    if (tag && typeof (tag) === 'object' && tag.id) {
      document.getElementById('idTaguEditorTagu').value = tag.id;
      document.getElementById('nazevTaguEditorTagu').value = tag.nazev;
      $('#idKategorieTaguEditorTagu').find('option[value="' + tag.id_kategorie + '"]').attr('selected', 'selected');
      document.getElementById('poznamkaEditorTagu').value = tag.poznamka;
    }
  };
  nazevTaguEditorTagu.on('change', detectDuplicity);
  nazevTaguEditorTagu.on('input', detectDuplicity);
  $('#{editorTaguHtmlId}').on($.modal.OPEN, function () {
    fillFromData(this)
    detectDuplicity()
  });

  $('#{editorTaguHtmlId} form').on('submit', function (event) {
    event.preventDefault();

    chybyEditoruTagu.css('text-decoration', 'line-through');

    const form = $(this)
    const ajaxLoader = $('<img class="ajax-loader" src="files/design/ajax-loader.gif">')
    const submit = form.find('button[type=submit]')
    submit.attr('disabled', 'disabled').append(ajaxLoader)
    $.post(
      document.URL,
      form.serialize(),
      function (response, status) {
        console.log("chybyEditoruTagu.css('text-decoration', 'inherit');");
        chybyEditoruTagu.html('').css('text-decoration', 'inherit');
        if (response.errors && response.errors.length > 0) {
          for (let error of response.errors) {
            chybyEditoruTagu.append($('<p class="error">' + error + '</p>'));
          }
          submit.attr('disabled', null).find('.ajax-loader').remove();
          return false;
        }
        if (response.tag) {
          allTagNames.push(response.tag.nazev);
          let event = new CustomEvent('newTagCreated', {
            detail: {
              tag: {
                id: response.tag.id,
                nazev: response.tag.nazev
              }
            }
          });
          document.getElementById('{editorTaguHtmlId}').dispatchEvent(event);
          submit.attr('disabled', null).find('.ajax-loader').remove();
          $.modal.close();
          return true;
        }
        chybyEditoruTagu.append($('<p class="error">Něco se nepovedlo: "' + status + '"</p>'));
      }
    )
  });
</script>
<!-- end:editorTagu -->