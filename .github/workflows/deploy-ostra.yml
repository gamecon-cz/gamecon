name: Deploy OSTRA (main) on direct push or merged pull request

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and start containers
        run: docker compose up --build --detach

      - name: Dump optimized Composer classmap
        run: docker compose exec --no-TTY web composer dump-autoload --optimize

      - name: Run tests in container
        run: docker compose exec --no-TTY web php ./vendor/bin/phpunit

      - name: Upload test output as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: php-test-logs
          path: ./tests/logs

      - name: Deploy via FTP
        # testy provádíme zvlášť, abychom neměli output z deploye moc dlouhý
        run: php ./udrzba/nasad.php --skip-tests
        env:
          FTP_DIR: ostra
          FTP_BASE_URL: ${{ secrets.FTP_BASE_URL }}
          DB_USER: ${{ secrets.OSTRA_DB_USER }}
          DB_PASS: ${{ secrets.OSTRA_DB_PASS }}
          DB_NAME: ${{ secrets.OSTRA_DB_NAME }}
          DB_SERV: localhost
          DBM_USER: ${{ secrets.OSTRA_DBM_USER }}
          DBM_PASS: ${{ secrets.OSTRA_DBM_PASS }}
          MIGRACE_HESLO: ${{ secrets.OSTRA_MIGRACE_HESLO }}
          SECRET_CRYPTO_KEY: ${{ secrets.OSTRA_SECRET_CRYPTO_KEY }}
          # pozor změnu CRON_KEY je nutné provést i
          # v https://console.cron-job.org
          CRON_KEY: ${{ secrets.OSTRA_CRON_KEY }}
          GOOGLE_API_CREDENTIALS: ${{ secrets.OSTRA_GOOGLE_API_CREDENTIALS }}
          FIO_TOKEN: ${{ secrets.OSTRA_FIO_TOKEN }}
          MAILER_DSN: ${{ secrets.MAILER_DSN }}
          DB_ANONYM_SERV: ${{ secrets.DB_ANONYM_SERV }}
          DB_ANONYM_USER: ${{ secrets.DB_ANONYM_USER }}
          DB_ANONYM_PASS: ${{ secrets.DB_ANONYM_PASS }}
          DB_ANONYM_NAME: ${{ secrets.DB_ANONYM_NAME }}
